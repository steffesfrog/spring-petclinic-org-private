name: JF RT CI with Maven + Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write     # Required for OIDC. This is required for requesting the JWT
  contents: read      # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
#    env:
#      JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
#      JF_URL: https://${{ vars.JF_URL }}/
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: maven

      - uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        name: Setup JFrog CLI
        env:
          JF_URL: https://${{ vars.JF_URL }}/
          # JF_PROJECT: ${{ vars.JF_PROJECT }}
        with:
          oidc-provider-name: setup-jfrog-cli

      # Ping JFrog Platform Instance
      - name: Ping JF
        run: jf rt ping

      # Configure maven for JF
      - name: Configure JFrog CLI for Maven
        run: |
          jf mvnc \
            --global \
            --repo-resolve-releases ${{ vars.RT_PREFIX }}-libs-release \
            --repo-resolve-snapshots ${{ vars.RT_PREFIX }}-libs-snapshot \

      # use JF so we can capture in buildinfo.
      - name: Build and Test JF Maven
        run: jf mvn clean install -DskipTests
#          --build-name="spring-petclinic" \
#          --build-number=1.0.${{ github.run_number }}


      - name: Build Docker Image
        run: jf docker build -t ${{ vars.RT_DOCKER_REGISTRY }}spring-petclinic:1.0.${{ github.run_number }} .

      - name: Push Docker Image to JFrog
        run: jf docker push ${{ vars.RT_DOCKER_REGISTRY }}spring-petclinic:1.0.${{ github.run_number }}

      - name: Publish Build Info
        run: jf rt build-publish spring-petclinic 1.0.${{ github.run_number }}
